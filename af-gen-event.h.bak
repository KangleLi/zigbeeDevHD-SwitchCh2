// This file is generated by Simplicity Studio.  Please do not edit manually.
//
//

// Enclosing macro to prevent multiple inclusion
#ifndef __AF_GEN_EVENT__
#define __AF_GEN_EVENT__


// Code used to configure the cluster event mechanism
#define EMBER_AF_GENERATED_EVENT_CODE \
  EmberEventControl emberAfIdentifyClusterServerTickCallbackControl1; \
  EmberEventControl emberAfOnOffClusterServerTickCallbackControl1; \
  EmberEventControl emberAfOtaBootloadClusterClientTickCallbackControl1; \
  EmberEventControl emberAfIdentifyClusterServerTickCallbackControl2; \
  EmberEventControl emberAfOnOffClusterServerTickCallbackControl2; \
  EmberEventControl emberAfOtaBootloadClusterClientTickCallbackControl2; \
  EmberEventControl emberAfIdentifyClusterServerTickCallbackControl3; \
  EmberEventControl emberAfOnOffClusterServerTickCallbackControl3; \
  EmberEventControl emberAfOtaBootloadClusterClientTickCallbackControl3; \
  EmberEventControl emberAfIdentifyClusterServerTickCallbackControl4; \
  EmberEventControl emberAfOnOffClusterServerTickCallbackControl4; \
  EmberEventControl emberAfOtaBootloadClusterClientTickCallbackControl4; \
  extern EmberEventControl _DrvMLR_PinSet_EC; \
  extern EmberEventControl _HD_HeartBeat_EC; \
  extern EmberEventControl _SEQ_Report_EC; \
  extern EmberEventControl _SteeringNwk_EC; \
  extern EmberEventControl _periodicReport_EC; \
  extern EmberEventControl _toggleHandler_EC; \
  extern EmberEventControl commissioning_EventControl; \
  extern EmberEventControl emberAfPluginInterpanFragmentReceiveEventControl; \
  extern EmberEventControl emberAfPluginInterpanFragmentTransmitEventControl; \
  extern EmberEventControl emberAfPluginNetworkSteeringFinishSteeringEventControl; \
  extern EmberEventControl emberAfPluginOtaStorageSimpleEepromPageEraseEventControl; \
  extern EmberEventControl emberAfPluginReportingTickEventControl; \
  extern EmberEventControl emberAfPluginScanDispatchScanEventControl; \
  extern EmberEventControl emberAfPluginUpdateTcLinkKeyBeginTcLinkKeyUpdateEventControl; \
  extern EmberEventControl findingandbinding_EventControl; \
  extern EmberEventControl gAppKeyScan_EventControl; \
  extern EmberEventControl gAppLedBlink_EventControl; \
  extern EmberEventControl mainInit_EventControl; \
  extern void _DrvMLR_PinSet_EF(void); \
  extern void _HD_HeartBeat_EF(void); \
  extern void _SEQ_Report_EF(void); \
  extern void _SteeringNwk_EF(void); \
  extern void _periodicReport_EF(void); \
  extern void _toggleHandler_EF(void); \
  extern void commissioning_EventFunction(void); \
  extern void emberAfPluginInterpanFragmentReceiveEventHandler(void); \
  extern void emberAfPluginInterpanFragmentTransmitEventHandler(void); \
  extern void emberAfPluginNetworkSteeringFinishSteeringEventHandler(void); \
  extern void emberAfPluginOtaStorageSimpleEepromPageEraseEventHandler(void); \
  extern void emberAfPluginReportingTickEventHandler(void); \
  extern void emberAfPluginScanDispatchScanEventHandler(void); \
  extern void emberAfPluginUpdateTcLinkKeyBeginTcLinkKeyUpdateEventHandler(void); \
  extern void findingandbinding_EventFunction(void); \
  extern void gAppKeyScan_EventFunction(void); \
  extern void gAppLedBlink_EventFunction(void); \
  extern void mainInit_EventFunction(void); \
  static void clusterTickWrapper(EmberEventControl *control, EmberAfTickFunction callback, uint8_t endpoint) \
  { \
    emberAfPushEndpointNetworkIndex(endpoint); \
    emberEventControlSetInactive(*control); \
    (*callback)(endpoint); \
    emberAfPopNetworkIndex(); \
  } \
  void emberAfIdentifyClusterServerTickCallbackWrapperFunction1(void) { clusterTickWrapper(&emberAfIdentifyClusterServerTickCallbackControl1, emberAfIdentifyClusterServerTickCallback, 1); } \
  void emberAfOnOffClusterServerTickCallbackWrapperFunction1(void) { clusterTickWrapper(&emberAfOnOffClusterServerTickCallbackControl1, emberAfOnOffClusterServerTickCallback, 1); } \
  void emberAfOtaBootloadClusterClientTickCallbackWrapperFunction1(void) { clusterTickWrapper(&emberAfOtaBootloadClusterClientTickCallbackControl1, emberAfOtaBootloadClusterClientTickCallback, 1); } \
  void emberAfIdentifyClusterServerTickCallbackWrapperFunction2(void) { clusterTickWrapper(&emberAfIdentifyClusterServerTickCallbackControl2, emberAfIdentifyClusterServerTickCallback, 2); } \
  void emberAfOnOffClusterServerTickCallbackWrapperFunction2(void) { clusterTickWrapper(&emberAfOnOffClusterServerTickCallbackControl2, emberAfOnOffClusterServerTickCallback, 2); } \
  void emberAfOtaBootloadClusterClientTickCallbackWrapperFunction2(void) { clusterTickWrapper(&emberAfOtaBootloadClusterClientTickCallbackControl2, emberAfOtaBootloadClusterClientTickCallback, 2); } \
  void emberAfIdentifyClusterServerTickCallbackWrapperFunction3(void) { clusterTickWrapper(&emberAfIdentifyClusterServerTickCallbackControl3, emberAfIdentifyClusterServerTickCallback, 3); } \
  void emberAfOnOffClusterServerTickCallbackWrapperFunction3(void) { clusterTickWrapper(&emberAfOnOffClusterServerTickCallbackControl3, emberAfOnOffClusterServerTickCallback, 3); } \
  void emberAfOtaBootloadClusterClientTickCallbackWrapperFunction3(void) { clusterTickWrapper(&emberAfOtaBootloadClusterClientTickCallbackControl3, emberAfOtaBootloadClusterClientTickCallback, 3); } \
  void emberAfIdentifyClusterServerTickCallbackWrapperFunction4(void) { clusterTickWrapper(&emberAfIdentifyClusterServerTickCallbackControl4, emberAfIdentifyClusterServerTickCallback, 4); } \
  void emberAfOnOffClusterServerTickCallbackWrapperFunction4(void) { clusterTickWrapper(&emberAfOnOffClusterServerTickCallbackControl4, emberAfOnOffClusterServerTickCallback, 4); } \
  void emberAfOtaBootloadClusterClientTickCallbackWrapperFunction4(void) { clusterTickWrapper(&emberAfOtaBootloadClusterClientTickCallbackControl4, emberAfOtaBootloadClusterClientTickCallback, 4); } \


// EmberEventData structs used to populate the EmberEventData table
#define EMBER_AF_GENERATED_EVENTS   \
  { &emberAfIdentifyClusterServerTickCallbackControl1, emberAfIdentifyClusterServerTickCallbackWrapperFunction1 }, \
  { &emberAfOnOffClusterServerTickCallbackControl1, emberAfOnOffClusterServerTickCallbackWrapperFunction1 }, \
  { &emberAfOtaBootloadClusterClientTickCallbackControl1, emberAfOtaBootloadClusterClientTickCallbackWrapperFunction1 }, \
  { &emberAfIdentifyClusterServerTickCallbackControl2, emberAfIdentifyClusterServerTickCallbackWrapperFunction2 }, \
  { &emberAfOnOffClusterServerTickCallbackControl2, emberAfOnOffClusterServerTickCallbackWrapperFunction2 }, \
  { &emberAfOtaBootloadClusterClientTickCallbackControl2, emberAfOtaBootloadClusterClientTickCallbackWrapperFunction2 }, \
  { &emberAfIdentifyClusterServerTickCallbackControl3, emberAfIdentifyClusterServerTickCallbackWrapperFunction3 }, \
  { &emberAfOnOffClusterServerTickCallbackControl3, emberAfOnOffClusterServerTickCallbackWrapperFunction3 }, \
  { &emberAfOtaBootloadClusterClientTickCallbackControl3, emberAfOtaBootloadClusterClientTickCallbackWrapperFunction3 }, \
  { &emberAfIdentifyClusterServerTickCallbackControl4, emberAfIdentifyClusterServerTickCallbackWrapperFunction4 }, \
  { &emberAfOnOffClusterServerTickCallbackControl4, emberAfOnOffClusterServerTickCallbackWrapperFunction4 }, \
  { &emberAfOtaBootloadClusterClientTickCallbackControl4, emberAfOtaBootloadClusterClientTickCallbackWrapperFunction4 }, \
  { &_DrvMLR_PinSet_EC, _DrvMLR_PinSet_EF }, \
  { &_HD_HeartBeat_EC, _HD_HeartBeat_EF }, \
  { &_SEQ_Report_EC, _SEQ_Report_EF }, \
  { &_SteeringNwk_EC, _SteeringNwk_EF }, \
  { &_periodicReport_EC, _periodicReport_EF }, \
  { &_toggleHandler_EC, _toggleHandler_EF }, \
  { &commissioning_EventControl, commissioning_EventFunction }, \
  { &emberAfPluginInterpanFragmentReceiveEventControl, emberAfPluginInterpanFragmentReceiveEventHandler }, \
  { &emberAfPluginInterpanFragmentTransmitEventControl, emberAfPluginInterpanFragmentTransmitEventHandler }, \
  { &emberAfPluginNetworkSteeringFinishSteeringEventControl, emberAfPluginNetworkSteeringFinishSteeringEventHandler }, \
  { &emberAfPluginOtaStorageSimpleEepromPageEraseEventControl, emberAfPluginOtaStorageSimpleEepromPageEraseEventHandler }, \
  { &emberAfPluginReportingTickEventControl, emberAfPluginReportingTickEventHandler }, \
  { &emberAfPluginScanDispatchScanEventControl, emberAfPluginScanDispatchScanEventHandler }, \
  { &emberAfPluginUpdateTcLinkKeyBeginTcLinkKeyUpdateEventControl, emberAfPluginUpdateTcLinkKeyBeginTcLinkKeyUpdateEventHandler }, \
  { &findingandbinding_EventControl, findingandbinding_EventFunction }, \
  { &gAppKeyScan_EventControl, gAppKeyScan_EventFunction }, \
  { &gAppLedBlink_EventControl, gAppLedBlink_EventFunction }, \
  { &mainInit_EventControl, mainInit_EventFunction }, \


#define EMBER_AF_GENERATED_EVENT_STRINGS   \
  "Identify Cluster Server EP 1",  \
  "On/off Cluster Server EP 1",  \
  "Over the Air Bootloading Cluster Client EP 1",  \
  "Identify Cluster Server EP 2",  \
  "On/off Cluster Server EP 2",  \
  "Over the Air Bootloading Cluster Client EP 2",  \
  "Identify Cluster Server EP 3",  \
  "On/off Cluster Server EP 3",  \
  "Over the Air Bootloading Cluster Client EP 3",  \
  "Identify Cluster Server EP 4",  \
  "On/off Cluster Server EP 4",  \
  "Over the Air Bootloading Cluster Client EP 4",  \
  "_ drv m l r_ pin set_ e c",  \
  "_ h d_ heart beat_ e c",  \
  "_ s e q_ report_ e c",  \
  "_ steering nwk_ e c",  \
  "_periodic report_ e c",  \
  "_toggle handler_ e c",  \
  "Commissioning_ event control",  \
  "Interpan Plugin FragmentReceive",  \
  "Interpan Plugin FragmentTransmit",  \
  "Network Steering Plugin FinishSteering",  \
  "OTA Simple Storage EEPROM Driver Plugin PageErase",  \
  "Reporting Plugin Tick",  \
  "Scan Dispatch Plugin Scan",  \
  "Update TC Link Key Plugin BeginTcLinkKeyUpdate",  \
  "Findingandbinding_ event control",  \
  "G app key scan_ event control",  \
  "G app led blink_ event control",  \
  "Main init_ event control",  \


// The length of the event context table used to track and retrieve cluster events
#define EMBER_AF_EVENT_CONTEXT_LENGTH 12

// EmberAfEventContext structs used to populate the EmberAfEventContext table
#define EMBER_AF_GENERATED_EVENT_CONTEXT { 0x1, 0x3, false, EMBER_AF_LONG_POLL, EMBER_AF_OK_TO_SLEEP, &emberAfIdentifyClusterServerTickCallbackControl1}, \
{ 0x1, 0x6, false, EMBER_AF_LONG_POLL, EMBER_AF_OK_TO_SLEEP, &emberAfOnOffClusterServerTickCallbackControl1}, \
{ 0x1, 0x19, true, EMBER_AF_LONG_POLL, EMBER_AF_OK_TO_SLEEP, &emberAfOtaBootloadClusterClientTickCallbackControl1}, \
{ 0x2, 0x3, false, EMBER_AF_LONG_POLL, EMBER_AF_OK_TO_SLEEP, &emberAfIdentifyClusterServerTickCallbackControl2}, \
{ 0x2, 0x6, false, EMBER_AF_LONG_POLL, EMBER_AF_OK_TO_SLEEP, &emberAfOnOffClusterServerTickCallbackControl2}, \
{ 0x2, 0x19, true, EMBER_AF_LONG_POLL, EMBER_AF_OK_TO_SLEEP, &emberAfOtaBootloadClusterClientTickCallbackControl2}, \
{ 0x3, 0x3, false, EMBER_AF_LONG_POLL, EMBER_AF_OK_TO_SLEEP, &emberAfIdentifyClusterServerTickCallbackControl3}, \
{ 0x3, 0x6, false, EMBER_AF_LONG_POLL, EMBER_AF_OK_TO_SLEEP, &emberAfOnOffClusterServerTickCallbackControl3}, \
{ 0x3, 0x19, true, EMBER_AF_LONG_POLL, EMBER_AF_OK_TO_SLEEP, &emberAfOtaBootloadClusterClientTickCallbackControl3}, \
{ 0x4, 0x3, false, EMBER_AF_LONG_POLL, EMBER_AF_OK_TO_SLEEP, &emberAfIdentifyClusterServerTickCallbackControl4}, \
{ 0x4, 0x6, false, EMBER_AF_LONG_POLL, EMBER_AF_OK_TO_SLEEP, &emberAfOnOffClusterServerTickCallbackControl4}, \
{ 0x4, 0x19, true, EMBER_AF_LONG_POLL, EMBER_AF_OK_TO_SLEEP, &emberAfOtaBootloadClusterClientTickCallbackControl4}


#endif // __AF_GEN_EVENT__
